// Generated by CoffeeScript 1.10.0
'use strict';
function check(done, f) {
    try {
        f();
        done();
    } catch(e) {
        done(e);
    }
};
describe('Class JSTimeLinter', function() {
  return describe('Инициализация', function() {
    var t;
    t = new JSTimeLinter();
    it('t является экземпляром класса JSTimeLinter', function() {
      return assert.instanceOf(t, JSTimeLinter);
    });
    describe('У класса есть методы:', function() {
      it('run()', function() {
        return assert.isFunction(t.run);
      });
      it('pause()', function() {
        return assert.isFunction(t.pause);
      });
      it('stop()', function() {
        return assert.isFunction(t.stop);
      });
      it('reset()', function() {
        return assert.isFunction(t.reset);
      });
      it('getJs()', function() {
        return assert.isFunction(t.getJs);
      });
      return it('spanCode()', function() {
        return assert.isFunction(t.spanCode);
      });
    });
    describe('Есть параметры', function() {
      it('code = string - исследуемый код', function() {
        return assert.typeOf(t.code, 'string');
      });
      it('col = string - текущий цвет', function() {
        return assert.typeOf(t.col, 'string');
      });
      it('cols = array - массив всех доступных стандартных цветов', function() {
        return assert.typeOf(t.cols, 'array');
      });
      return it('step = number - длительность итерации в секундах', function() {
        return assert.typeOf(t.step, 'number');
      });
    });
    return describe('Есть метки', function() {
      return it('spanned_code - заключена ли в span каждая часть кода', function() {
        return assert.property(t, 'spanned_code');
      });
    });
  });
});
